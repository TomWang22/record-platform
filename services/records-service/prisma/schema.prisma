datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_RECORDS")
}

generator client {
  provider      = "prisma-client-js"
  output        = "../generated/records-client"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

model Record {
  id                 String   @id @db.Uuid @default(uuid())
  userId             String   @db.Uuid @map("user_id")

  artist             String   @db.VarChar(256)
  name               String   @db.VarChar(256)
  format             String   @db.VarChar(64)

  // simple strings (no enums)
  recordGrade        String?  @db.VarChar(16) @map("record_grade")
  sleeveGrade        String?  @db.VarChar(16) @map("sleeve_grade")

  hasInsert          Boolean  @map("has_insert")          @default(false)
  insertGrade        String?  @db.VarChar(16)             @map("insert_grade")

  hasBooklet         Boolean  @map("has_booklet")         @default(false)
  bookletGrade       String?  @db.VarChar(16)             @map("booklet_grade")

  hasObiStrip        Boolean  @map("has_obi_strip")       @default(false)
  obiStripGrade      String?  @db.VarChar(16)             @map("obi_strip_grade")

  hasFactorySleeve   Boolean  @map("has_factory_sleeve")  @default(false)
  factorySleeveGrade String?  @db.VarChar(16)             @map("factory_sleeve_grade")

  isPromo            Boolean  @map("is_promo")            @default(false)

  catalogNumber      String?  @db.VarChar(64)             @map("catalog_number")
  notes              String?  @db.Text

  purchasedAt        DateTime?                            @map("purchased_at")
  pricePaid          Decimal?  @db.Decimal(10, 2)         @map("price_paid")

  // NEW: pressing/release metadata
  releaseYear        Int?      @map("release_year")
  releaseDate        DateTime? @map("release_date")
  pressingYear       Int?      @map("pressing_year")
  label              String?   @db.VarChar(128)
  labelCode          String?   @db.VarChar(64)             @map("label_code")

  mediaPieces        RecordMedium[]

  createdAt          DateTime @default(now())             @map("created_at")
  updatedAt          DateTime @updatedAt                  @map("updated_at")

  @@map("records")
  @@index([userId])
  @@index([artist])
  @@index([catalogNumber])
  @@index([artist, name, format])

  // NEW indexes
  @@index([releaseYear])
  @@index([label])
}

model RecordMedium {
  id         String   @id @db.Uuid @default(uuid())
  recordId   String   @db.Uuid @map("record_id")
  record     Record   @relation(fields: [recordId], references: [id], onDelete: Cascade)

  index      Int
  kind       String   @db.Text
  sizeInch   Int?     @map("size_inch")
  speedRpm   Int?     @map("speed_rpm")

  discGrade  String?  @db.VarChar(16) @map("disc_grade")
  sides      Json?
  notes      String?  @db.Text

  createdAt  DateTime @default(now())  @map("created_at")
  updatedAt  DateTime @updatedAt       @map("updated_at")

  @@map("record_media")
  @@unique([recordId, index])
}
